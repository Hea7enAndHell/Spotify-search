"use strict";const clientId="98f436cbfd3a4a6bb6ad4fda6427b451",redirectUri="https://hea7enandhell.github.io/Spotify-search/",scopes="user-library-read";let accessToken="";const loginButton=document.getElementById("login__button");loginButton.addEventListener("click",(()=>{const t=`https://accounts.spotify.com/authorize?response_type=token&client_id=${clientId}&scope=${scopes}&redirect_uri=${redirectUri}`;window.location.href=t}));const loading=document.querySelector(".loading"),playlistInfo=document.querySelector(".playlist-info");let currentPlaylist=[],currentDefaultPlaylist=[];async function fetchWebApi(t,e,s){const a=await fetch(`https://api.spotify.com/${t}`,{headers:{Authorization:`Bearer ${accessToken}`},method:e,body:JSON.stringify(s)});return await a.json()}async function getUsers(){const t=await fetchWebApi("v1/me","GET");return[t.display_name,t.images[1].url]}function getTracksList(t){return t?.map((({track:t,added_at:e})=>({artists:t.artists.map((t=>t.name)).join(", "),name:t.name,duration:msToMmSs(t.duration_ms),image:t.album.images[0].url,link:`https://www.google.com.ua/search?q=${changeString(t.artists.map((t=>t.name)).join(", ")+" "+t.name)}+download&oq=${changeString(t.artists.map((t=>t.name)).join(", ")+" "+t.name)}+download&sourceid=chrome&ie=UTF-8`,added_at:e})))}async function getUsersPlaylists(t=[],e=0,s=50){const a=await fetchWebApi(`v1/me/playlists?offset=${e}&limit=${s}`,"GET");return t.push(...a.items),a.items.length<s?[t,t.length.toString().length]:await getUsersPlaylists(t,e+s,s)}window.addEventListener("load",(async()=>{const t=document.querySelector(".login"),e=window.location.hash.substring(1).split("&").reduce(((t,e)=>{if(e){const s=e.split("=");t[s[0]]=decodeURIComponent(s[1])}return t}),{});if(e.access_token){accessToken=e.access_token,t.remove();document.querySelector(".list-wrap").classList.remove("hidden"),loading.classList.add("active");const[s,a]=await getUsers(),i=document.querySelector(".user__image"),n=document.querySelector(".user__name"),r=document.querySelector(".aside-inner");document.querySelector(".list").innerHTML="",i.src=a,n.textContent=s,r.classList.add("active"),viewButton();document.querySelector(".library-wrap").classList.add("active");const o=document.querySelector(".playlists"),[c]=await getUsersPlaylists();c.forEach((({name:t,images:e,id:s})=>{const a=`\n                        <button type="button" class="playlists__button" data-id="${s}">\n                            <img src="${e[0].url}" alt="Image" class="playlists__image">\n                            <p class="playlists__text">${t}</p>\n                        </button>\n                    `;o.insertAdjacentHTML("beforeend",a)})),await getUsersPlaylistsTrack("me"),playlistClick()}else t.classList.add("active")}));let resultPlaylistsTrack=[],currentCountPlaylistsTrack=0,limitPlaylistsTrack=50,totalPlaylistsTrack=0;async function getUsersPlaylistsTrack(t){const e=await fetchWebApi(`v1/${t}/tracks?offset=${currentCountPlaylistsTrack}&limit=${limitPlaylistsTrack}`,"GET"),s=document.querySelector(".playlist-info__count-tracks");0===totalPlaylistsTrack&&(totalPlaylistsTrack=e.total,s.textContent=totalPlaylistsTrack),resultPlaylistsTrack=[...e.items];const a=getTracksList(resultPlaylistsTrack);currentPlaylist.push(...a),currentDefaultPlaylist.push(...a),renderTracks(a,currentCountPlaylistsTrack,totalPlaylistsTrack.toString().length),currentCountPlaylistsTrack+=limitPlaylistsTrack,e.items.length===limitPlaylistsTrack&&await getUsersPlaylistsTrack(t)}function msToMmSs(t){let e=Math.floor(t/1e3),s=Math.floor(e/60),a=e%60;return`${String(s).padStart(2,"0")}:${String(a).padStart(2,"0")}`}function changeString(t){return t.match(/[а-яёa-zÀ-ÿ\d.-]+/gi).join("+")}function renderTracks(t,e,s){const a=document.querySelector(".list");t.forEach((({artists:t,name:i,duration:n,image:r,link:o},c)=>{const l=i.split("- "),d=`${l[0].trim()}${void 0===l[1]?"":` (${l[1]})`}`,u=`\n                <li class="item">\n                    <img class="item__image" src="${r}">\n                    <div class="item__content">\n                        <div class="item__number-wrap">\n                            <p class="item__number">${String(c+e+1).padStart(s,"0")}</p>\n                            <p class="item__duration">${n}</p>\n                        </div>\n                        <div class="item__track">\n                            <p class="item__artists">${t}</p>\n                            <p class="item__name">${d}</p>\n                        </div>\n                        <a href="${o}" target="_blank" class="item__link">Search</a>\n                    </div>\n                </li>\n            `;a.insertAdjacentHTML("beforeend",u)})),loading&&loading.classList.remove("active"),playlistInfo.classList.remove("hidden")}function viewButton(){const t=document.querySelector(".list"),e=document.querySelector(".button-grid"),s=document.querySelector(".button-list1"),a=document.querySelector(".button-list2");e.classList.contains("active")&&t.classList.remove("view-list1","view-list2"),s.classList.contains("active")&&(t.classList.remove("view-list2"),t.classList.add("view-list1")),a.classList.contains("active")&&(t.classList.remove("view-list1"),t.classList.add("view-list2"))}const viewButtons=document.querySelectorAll(".view__button");viewButtons.forEach((t=>{t.addEventListener("click",(()=>{t.classList.contains("active")||(viewButtons.forEach((t=>{t.classList.remove("active")})),t.classList.add("active"),viewButton())}))}));const sortContentButtons=document.querySelectorAll(".sort-content__button");let playlistStatus=!0;function playlistClick(){const t=document.querySelectorAll(".playlists__button"),e=document.querySelector(".liked-songs__button");t.forEach((s=>{s.addEventListener("click",(async()=>{if(!1===playlistStatus||s.classList.contains("active"))return;playlistStatus=!1,playlistInfo.classList.add("hidden"),loading.classList.add("active"),t.forEach((t=>{t.classList.remove("active")})),s.classList.add("active"),sortContentButtons.forEach((t=>{t.classList.remove("active")}));document.querySelector(".sort-content__button[data-sort-default]").classList.add("active");document.querySelector(".list").innerHTML="";const a=s.querySelector(".playlists__text");document.querySelector(".playlist-info__title").textContent=a.textContent,currentPlaylist=[],currentDefaultPlaylist=[],resultPlaylistsTrack=[],currentCountPlaylistsTrack=0,limitPlaylistsTrack=50,totalPlaylistsTrack=0;const i=s===e?"me":`playlists/${s.dataset.id}`;await getUsersPlaylistsTrack(i),playlistStatus=!0}))}))}const aside=document.querySelector(".aside"),sortContent=document.querySelector(".sort-content");document.addEventListener("click",(()=>{sortContent.classList.remove("active"),aside.classList.remove("active")})),document.addEventListener("scroll",(()=>{sortContent.classList.remove("active")}));const sortButton=document.querySelector(".sort__button");function sortByName(t,e){const s=t.artists.localeCompare(e.artists);return 0!==s?s:t.name.localeCompare(e.name)}function sortByDate(t,e){return e.added_at.localeCompare(t.added_at)}sortButton.addEventListener("click",(t=>{t.stopPropagation(),sortContent.classList.toggle("active"),sortContent.classList.contains("active")&&(window.innerWidth<1070&&(sortContent.style.top=sortButton.getBoundingClientRect().top+"px"),aside.addEventListener("scroll",(()=>{sortContent.classList.remove("active")})))})),sortContent.addEventListener("click",(t=>{t.stopPropagation()})),sortContentButtons.forEach((t=>{t.addEventListener("click",(()=>{if(!1===playlistStatus||t.classList.contains("active")&&t.hasAttribute("data-sort-default"))return;sortContentButtons.forEach((e=>{t!==e&&e.classList.remove("active","reverse")}));let e=null;t.hasAttribute("data-sort-default")&&(t.classList.add("active"),e=currentDefaultPlaylist),t.hasAttribute("data-sort-name")&&(t.classList.contains("active")&&t.classList.contains("reverse")?(t.classList.remove("reverse"),e=currentPlaylist.sort(sortByName)):t.classList.contains("active")?(t.classList.add("reverse"),e=currentPlaylist.sort(sortByName).reverse()):(t.classList.add("active"),e=currentPlaylist.sort(sortByName))),t.hasAttribute("data-sort-date")&&(t.classList.contains("active")&&t.classList.contains("reverse")?(t.classList.remove("reverse"),e=currentPlaylist.sort(sortByDate)):t.classList.contains("active")?(t.classList.add("reverse"),e=currentPlaylist.sort(sortByDate).reverse()):(t.classList.add("active"),e=currentPlaylist.sort(sortByDate)));document.querySelector(".list").innerHTML="",renderTracks(e,0,totalPlaylistsTrack.toString().length)}))}));const userButton=document.querySelector(".user");userButton.addEventListener("click",(t=>{t.stopPropagation(),sortContent.classList.remove("active"),window.innerWidth<1070&&aside.classList.toggle("active")})),window.addEventListener("resize",(()=>{window.innerWidth>1069&&aside.classList.remove("active")})),window.addEventListener("load",(t=>{document.body.classList.remove("js-stop-transition")}));